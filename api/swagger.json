{
  "openapi": "3.0.3",
  "info": {
    "title": "OrderService API",
    "version": "1.0.0",
    "description": "API для работы с заказами"
  },
  "tags": [
    {
      "name": "Order",
      "description": "Операции с заказами"
    }
  ],
  "paths": {
    "/api/v1/orders": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Создание заказа",
        "description": "Создает новый заказ который выбрал пользователь",
        "operationId": "CreateOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_order_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Заказ успешно создан",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create_order_response"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validation_error"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internal_server_error"
                }
              }
            }
          },
          "502": {
            "description": "Ошибка взаимодействия с внешним сервером",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bad_gateway_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_uuid}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/order_uuid"
        }
      ],
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Получить заказ по UUID",
        "description": "Возвращает информацию о заказе",
        "operationId": "getOrder",
        "responses": {
          "200": {
            "description": "Заказ успешно получен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_order_response"
                }
              }
            }
          },
          "404": {
            "description": "Заказ не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not_found_error"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_uuid}/pay": {
      "parameters": [
        {
          "$ref": "#/components/parameters/order_uuid"
        }
      ],
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Оплата заказа",
        "description": "Проводит оплату ранее созданного заказа",
        "operationId": "payOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pay_order_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Заказ успешно оплачен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pay_order_response"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validation_error"
                }
              }
            }
          },
          "404": {
            "description": "Заказ не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not_found_error"
                }
              }
            }
          },
          "409": {
            "description": "Заказ уже оплачен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflict_error"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internal_server_error"
                }
              }
            }
          },
          "502": {
            "description": "Ошибка взаимодействия с внешним сервером",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bad_gateway_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_uuid}/cancel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/order_uuid"
        }
      ],
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Отменить заказ",
        "description": "Отменяет заказ",
        "operationId": "cancelOrder",
        "responses": {
          "204": {
            "description": "Заказ успешно отменен"
          },
          "404": {
            "description": "Заказ не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not_found_error"
                }
              }
            }
          },
          "409": {
            "description": "Заказ уже оплачен и не может быть отменен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflict_error"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internal_server_error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateOrderRequest": {
        "$ref": "#/components/schemas/create_order_request"
      },
      "CreateOrderResponse": {
        "$ref": "#/components/schemas/create_order_response"
      },
      "PayOrderRequest": {
        "$ref": "#/components/schemas/pay_order_request"
      },
      "PayOrderResponse": {
        "$ref": "#/components/schemas/pay_order_response"
      },
      "GetOrderResponse": {
        "$ref": "#/components/schemas/get_order_response"
      },
      "OrderStatus": {
        "$ref": "#/components/schemas/order_status"
      },
      "PaymentMethod": {
        "$ref": "#/components/schemas/payment_method"
      },
      "create_order_request": {
        "type": "object",
        "required": [
          "user_uuid",
          "part_uuids"
        ],
        "properties": {
          "user_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID пользователя, создающего заказ",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "part_uuids": {
            "type": "array",
            "description": "Список UUID деталей, которые пользователь хочет заказать",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 1,
            "example": [
              "550e8400-e29b-41d4-a716-446655440000",
              "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
            ]
          }
        },
        "description": "Запрос на создание нового заказа",
        "example": {
          "user_uuid": "123e4567-e89b-12d3-a456-426614174000",
          "part_uuids": [
            "550e8400-e29b-41d4-a716-446655440000",
            "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
          ]
        }
      },
      "create_order_response": {
        "type": "object",
        "required": [
          "order_uuid",
          "total_price"
        ],
        "properties": {
          "order_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID заказа, который создал пользователь",
            "example": "3f5a2e94-8c4b-4c0f-9b7a-1e2a5c7e9baf"
          },
          "total_price": {
            "type": "number",
            "format": "double",
            "description": "Общая стоимость заказа",
            "example": 123.45
          }
        },
        "description": "Ответ на созданный заказ",
        "example": {
          "order_uuid": "3f5a2e94-8c4b-4c0f-9b7a-1e2a5c7e9baf",
          "total_price": 123.45
        }
      },
      "validation_error": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "Код ошибки",
            "example": "BAD_REQUEST"
          },
          "message": {
            "type": "string",
            "description": "Описание ошибки",
            "example": "Некорректный запрос"
          }
        }
      },
      "internal_server_error": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "Код ошибки",
            "example": "INTERNAL_SERVER_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Описание ошибки",
            "example": "Внутренняя ошибка сервера"
          }
        }
      },
      "bad_gateway_error": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "Код ошибки",
            "example": "BAD_GATEWAY"
          },
          "message": {
            "type": "string",
            "description": "Описание ошибки",
            "example": "Ошибка взаимодействия с внешним сервером"
          }
        }
      },
      "order_status": {
        "type": "string",
        "enum": [
          "PENDING_PAYMENT",
          "PAID",
          "CANCELLED"
        ],
        "default": "PENDING_PAYMENT",
        "description": "Статус заказа:\n* PENDING_PAYMENT - заказа создан и ожидает оплаты\n* PAID - заказ успешно оплачен\n* CANCELLED - заказ отменен\n",
        "example": "PENDING_PAYMENT"
      },
      "payment_method": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "CARD",
          "SBP",
          "CREDIT_CARD",
          "INVESTOR_MONEY"
        ],
        "default": "UNKNOWN",
        "description": "Методы оплаты заказа:\n* UNKNOWN - неизвестный\n* CARD - картой\n* SBP - системой быстрых платежей\n* CREDIT_CARD - кредитной картой \n* INVESTOR_MONEY - средствами инвестора\n",
        "example": "CARD"
      },
      "get_order_response": {
        "type": "object",
        "required": [
          "order_uuid",
          "user_uuid",
          "part_uuids",
          "total_price",
          "status"
        ],
        "properties": {
          "order_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID заказа",
            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
          },
          "user_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID пользователя",
            "example": "a9c14f7d-3f2a-4b6e-9c18-71f3f9b2a6e3"
          },
          "part_uuids": {
            "type": "array",
            "description": "Список UUID деталей",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 1,
            "example": [
              "550e8400-e29b-41d4-a716-446655440000",
              "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
            ]
          },
          "total_price": {
            "type": "number",
            "format": "double",
            "description": "Общая стоимость заказа",
            "example": 123.45
          },
          "status": {
            "$ref": "#/components/schemas/order_status"
          },
          "transaction_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID транзакции",
            "example": "b27e6a18-4f8d-4f1a-98a7-5b3a0cb9de52"
          },
          "payment_method": {
            "$ref": "#/components/schemas/payment_method"
          }
        }
      },
      "not_found_error": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "Код ошибки",
            "example": "NOT_FOUND"
          },
          "message": {
            "type": "string",
            "description": "Описание ошибки",
            "example": "Заказ не найден"
          }
        }
      },
      "pay_order_request": {
        "type": "object",
        "required": [
          "payment_method"
        ],
        "properties": {
          "payment_method": {
            "$ref": "#/components/schemas/payment_method"
          }
        },
        "description": "Запрос на оплату заказа",
        "example": {
          "payment_method": "CARD"
        }
      },
      "pay_order_response": {
        "type": "object",
        "required": [
          "transaction_uuid"
        ],
        "properties": {
          "transaction_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID транзакции",
            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
          }
        },
        "description": "Ответ на оплаченный заказ",
        "example": {
          "transaction_uuid": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
        }
      },
      "conflict_error": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "Код ошибки",
            "example": "CONFLICT"
          },
          "message": {
            "type": "string",
            "description": "Описание ошибки",
            "example": "Заказ уже оплачен"
          }
        }
      }
    },
    "parameters": {
      "order_uuid": {
        "name": "order_uuid",
        "in": "path",
        "required": true,
        "description": "Уникальный идентификатор заказа в формате UUID",
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "example": "e2d14b6c-3b92-4a0b-8d21-84c9a1b27f45"
      }
    }
  },
  "x-ogen": {
    "target": ".shared/pkg/openapi/order/v1",
    "package": "order_v1",
    "clean": true
  }
}
