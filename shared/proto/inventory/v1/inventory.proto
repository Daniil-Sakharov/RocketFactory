syntax = "proto3";

package inventory.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/Daniil-Sakharov/RocketFactory/shared/pkg/proto/inventory/v1;inventory_v1";

// Сервис для управления инвентарем деталей космических кораблей
service InventoryService {
  // Возвращает информацию о детали по её UUID
  rpc GetPart(GetPartRequest) returns (GetPartResponse);
  // Возвращает список деталей с возможностью фильтрации
  rpc ListParts(ListPartsRequest) returns (ListPartsResponse);
}

// Запрос на получение детали по UUID
message GetPartRequest {
  // Уникальный идентификатор детали
  string uuid = 1;
}

// Ответ с информацией о детали
message GetPartResponse {
  // Информация о детали
  Part part = 1;
}

// Запрос на получение списка деталей с фильтрацией
message ListPartsRequest {
  // Фильтр по деталям (все поля опциональны)
  PartsFilter filter = 1;
}

// Ответ со списком найденных деталей
message ListPartsResponse {
  // Список найденных деталей
  repeated Part parts = 1;
}

// Фильтр для поиска деталей
message PartsFilter {
  // Список UUID'ов. Пусто — не фильтруем по UUID
  repeated string uuids = 1;
  // Список имён. Пусто — не фильтруем по имени
  repeated string names = 2;
  // Список категорий. Пусто — не фильтруем по категории
  repeated Category categories = 3;
  // Список стран производителей. Пусто — не фильтруем по стране
  repeated string manufacturer_countries = 4;
  // Список тегов. Пусто — не фильтруем по тегам
  repeated string tags = 5;
}

// Информация о детали космического корабля
message Part {
  // Уникальный идентификатор детали
  string uuid = 1;
  // Название детали
  string name = 2;
  // Описание детали
  string description = 3;
  // Цена за единицу
  double price = 4;
  // Количество на складе
  int64 stock_quantity = 5;
  // Категория детали
  Category category = 6;
  // Размеры детали
  Dimensions dimensions = 7;
  // Информация о производителе
  Manufacturer manufacturer = 8;
  // Теги для быстрого поиска
  repeated string tags = 9;
  // Гибкие метаданные
  map<string, Value> metadata = 10;
  // Дата создания записи
  google.protobuf.Timestamp created_at = 11;
  // Дата последнего обновления
  google.protobuf.Timestamp updated_at = 12;
}

// Категории деталей космических кораблей
enum Category {
  // Неизвестная категория
  CATEGORY_UNSPECIFIED = 0;
  // Двигатель
  CATEGORY_ENGINE = 1;
  // Топливо
  CATEGORY_FUEL = 2;
  // Иллюминатор
  CATEGORY_PORTHOLE = 3;
  // Крыло
  CATEGORY_WING = 4;
}

// Размеры детали
message Dimensions {
  // Длина в сантиметрах
  double length = 1;
  // Ширина в сантиметрах
  double width = 2;
  // Высота в сантиметрах
  double height = 3;
  // Вес в килограммах
  double weight = 4;
}

// Информация о производителе
message Manufacturer {
  // Название производителя
  string name = 1;
  // Страна производства
  string country = 2;
  // Сайт производителя
  string website = 3;
}

// Значение для метаданных (может быть одним из типов)
message Value {
  oneof value {
    // Строковое значение
    string string_value = 1;
    // Целое значение
    int64 int64_value = 2;
    // Дробное значение
    double double_value = 3;
    // Логическое значение
    bool bool_value = 4;
  }
}